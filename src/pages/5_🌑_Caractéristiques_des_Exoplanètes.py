import streamlit as st
import pandas as pd
from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans
import plotly.express as px
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score

# Chargement des donn√©es
data_path = './data/all_exoplanets_with_goldilock_zone.csv'
data = pd.read_csv(data_path)

# Configuration de la page Streamlit
st.set_page_config(page_title="Outer Planets", page_icon="ü™ê", layout="wide")

# Sidebar avec logo
st.sidebar.image("./OP-logo-2.png", use_column_width=True)

host_names = ['Tous les syst√®mes'] + list(data['Planet Host'].unique())

# Titre
st.title("üåë Caract√©ristiques des Exoplan√®tes")

st.write("""
Les exoplan√®tes sont des plan√®tes situ√©es en dehors de notre syst√®me solaire. Elles peuvent √™tre de tailles, de compositions et d'orbites tr√®s vari√©es. Dans cette section, nous allons explorer les caract√©ristiques des exoplan√®tes d√©couvertes √† ce jour.
""")

# S√©lection du syst√®me stellaire
system_choice = st.selectbox("Choisissez un syst√®me stellaire :", options=host_names)

# Filtrer les donn√©es en fonction du syst√®me stellaire s√©lectionn√©
if system_choice == 'Tous les syst√®mes':
    filtered_data = data
else:
    filtered_data = data[data['Planet Host'] == system_choice]

# Checkbox pour afficher les plan√®tes dans la zone habitable
show_goldilock_zone = st.checkbox("Afficher les plan√®tes dans la zone habitable")

# Filtrer les donn√©es pour les plan√®tes dans la zone habitable si l'option est coch√©e
if show_goldilock_zone:
    filtered_data['In Goldilock Zone'] = filtered_data['In Goldilock Zone'].astype(int)
    filtered_data = filtered_data[filtered_data['In Goldilock Zone'] == 1]

# Filtrer les donn√©es pour les plan√®tes avec une excentricit√© inf√©rieure √† 0.6
filtered_data.loc[filtered_data["Eccentricity"] > 0.6, "In Goldilock Zone"] = 0

# Cr√©er une nouvelle colonne pour la couleur des barres
filtered_data['Color'] = filtered_data['In Goldilock Zone'].apply(lambda x: 'In Goldilock Zone' if x == 1 else 'Other Exoplanets')

# Affichage du syst√®me stellaire s√©lectionn√©
st.write(f"Syst√®me stellaire s√©lectionn√© : **{system_choice}**")

# GRAPH 1
st.header("Analyse des Caract√©ristiques des Exoplan√®tes")
# Filtrer les donn√©es pour les plan√®tes dans la zone habitable si l'option est coch√©e
if show_goldilock_zone:
    filtered_data['In Goldilock Zone'] = filtered_data['In Goldilock Zone'].astype(int)
    filtered_data = filtered_data[filtered_data['In Goldilock Zone'] == 1]

# Widget slider pour permettre √† l'utilisateur de sp√©cifier une limite sup√©rieure pour les p√©riodes orbitales
max_orbital_period = st.slider("Limite sup√©rieure pour les p√©riodes orbitales (jours) :",
                               min_value=0, max_value=50000, value=50000)

# Filtrer les donn√©es pour les p√©riodes orbitales inf√©rieures ou √©gales √† la limite sup√©rieure sp√©cifi√©e
filtered_orbital_data = filtered_data[filtered_data['Orbital Period Days'] <= max_orbital_period]

# Graphique de distribution des p√©riodes orbitales avec la plage sp√©cifi√©e par l'utilisateur
fig_orbital_periods = px.histogram(filtered_orbital_data[filtered_orbital_data["Orbital Period Days"] <= 50000], x='Orbital Period Days',
                                   title=f'Distribution des P√©riodes Orbitales des Exoplan√®tes (jusqu\'√† {max_orbital_period} jours)',
                                   color='Color',
                                   color_discrete_map={'In Goldilock Zone': 'yellow', 'Other Exoplanets': 'lightskyblue'})
st.plotly_chart(fig_orbital_periods)

st.write("""
Ce graphique montre comment sont r√©parties les p√©riodes orbitales des exoplan√®tes, fournissant des insights sur la diversit√© des syst√®mes plan√©taires d√©couverts. Les p√©riodes orbitales peuvent varier de quelques jours √† plusieurs ann√©es, ce qui peut indiquer la distance des exoplan√®tes par rapport √† leur √©toile h√¥te et leurs conditions orbitales.
""")

# GRAPH 2
st.header("Distances et Observabilit√©")
# Graphique de distribution des distances des exoplan√®tes
fig_distances = px.histogram(filtered_data[filtered_data["Orbit Semi-Major Axis"] <= 400], x='Orbit Semi-Major Axis',
                             title='Distribution des Distances des Exoplan√®tes', color='Color',
                             color_discrete_map={'In Goldilock Zone': 'yellow', 'Other Exoplanets': 'lightskyblue'})
st.plotly_chart(fig_distances)

st.write("""
Ce graphique montre la distribution des distances des exoplan√®tes en UA, illustrant les d√©fis d'observation associ√©s √† ces distances. Les exoplan√®tes plus proches sont souvent plus faciles √† √©tudier en d√©tail, tandis que celles plus √©loign√©es n√©cessitent des techniques d'observation plus avanc√©es.
""")

# GRAPH 3
st.header("Distribution de l'excentricit√©")
# Graphique de distribution de l'excentricit√© des orbites des exoplan√®tes
fig_eccentricity = px.histogram(filtered_data, x='Eccentricity',
                                title='Distribution de l\'Excentricit√© des Orbites des Exoplan√®tes', color='Color',
                                color_discrete_map={'In Goldilock Zone': 'yellow', 'Other Exoplanets': 'lightskyblue'})

st.plotly_chart(fig_eccentricity)

# GRAPH 4
# Exemple sp√©cifique de l'exoplan√®te Kepler-186 f
planet_data = filtered_data[filtered_data['Planet Name'] == 'Kepler-186 f']

st.header("Cas d'√âtude : Kepler-186 f")
st.write("""
Kepler-186 f est une exoplan√®te situ√©e dans la zone habitable de son √©toile h√¥te, Kepler-186. 
Elle a √©t√© d√©couverte par le t√©lescope spatial Kepler en 2014 et repr√©sente un cas int√©ressant 
pour l'√©tude des exoplan√®tes potentiellement habitables.
""")
st.write(planet_data)
