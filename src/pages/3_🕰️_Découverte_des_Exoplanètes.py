import streamlit as st
import pandas as pd
from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans
import plotly.express as px
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score

# Chargement des donn√©es
data_path = './data/all_exoplanets_with_goldilock_zone.csv'
data = pd.read_csv(data_path)

# Configuration de la page Streamlit
st.set_page_config(page_title="Outer Planets", page_icon="ü™ê", layout="wide")

# Sidebar avec logo
st.sidebar.image("./OP-logo-2.png", use_column_width=True)

# Titre de la section
st.title("üï∞Ô∏è D√©couverte des exoplan√®tes")

# Explication de la Goldilock Zone
st.header("Quand et comment les Exoplan√®tes ont-elles √©t√© d√©couvertes ?")
st.write("Les exoplan√®tes ont √©t√© d√©couvertes a des √©poques diff√©rentes et avec des technologies diff√©rentes.\nVoici des graphiques illustrants cette id√©e.")

# Liste des noms d'h√¥tes uniques et option "Tous les syst√®mes"
host_names = ['Tous les syst√®mes'] + list(data['Planet Host'].unique())

# S√©lection du syst√®me stellaire
system_choice = st.selectbox("Choisissez un syst√®me stellaire :", options=host_names)

# Filtrer les donn√©es en fonction du syst√®me stellaire s√©lectionn√©
if system_choice == 'Tous les syst√®mes':
    filtered_data = data
else:
    filtered_data = data[data['Planet Host'] == system_choice]


# GRAPH 1
st.header("Chronologie des D√©couvertes")
# Conversion de la colonne de date en format datetime si ce n'est pas d√©j√† fait
filtered_data['Discovery Year'] = pd.to_datetime(filtered_data['Discovery Year'], format='%Y', errors='coerce')

st.write("""
Ce graphique permet de visualiser comment le nombre de d√©couvertes d'exoplan√®tes a augment√© au fil des ann√©es, en mettant en √©vidence les avanc√©es technologiques et les m√©thodes de d√©tection telles que la m√©thode des transits et la m√©thode de la vitesse radiale. Les pics peuvent correspondre √† des missions spatiales sp√©cifiques ou √† des am√©liorations dans les instruments de d√©tection.
""")
# Conversion de la colonne de date en format datetime si ce n'est pas d√©j√† fait
filtered_data['Discovery Year'] = pd.to_datetime(filtered_data['Discovery Year'], format='%Y', errors='coerce')

fig = px.histogram(filtered_data, x='Discovery Year', title='Ann√©es de d√©couverte')
st.plotly_chart(fig)

# GRAPH 2
st.header("M√©thodes de D√©couvertes")

st.write("""
Ce graphique permet de visualiser comment les m√©thodes de d√©couvertes ayant permit de d√©couvrir le plus de plan√®te.
""")

method_counts = filtered_data['Discovery Method'].value_counts().reset_index()
method_counts.columns = ['Discovery Method', 'Count']
fig = px.pie(method_counts, values='Count', names='Discovery Method', title='M√©thodes de d√©couverte')
st.plotly_chart(fig)
